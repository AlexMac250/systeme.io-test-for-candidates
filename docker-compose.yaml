version: '3'

services:
  nginx:
    container_name: $COMPOSE_PROJECT_NAME-nginx
    image: nginx
    env_file:
      - .env.local
    volumes:
      - .:/app
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/templates:/etc/nginx/templates:ro
    ports:
      - "8080:80"
    environment:
      - NGINX_SERVER_NAME=${REQUEST_HOST:-localhost}
      - NGINX_PORT=80
    networks:
      - network
    depends_on:
      - php

  php:
    container_name: $COMPOSE_PROJECT_NAME-php
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    env_file:
      - .env.local
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - PHP_IDE_CONFIG=serverName=${REQUEST_HOST:-localhost}
    depends_on:
      - database
    networks:
      - network
    extra_hosts:
      - "host.docker.internal:host-gateway"

###> doctrine/doctrine-bundle ###
  database:
    container_name: $COMPOSE_PROJECT_NAME-postgres
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    ports:
      - "5432"
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data:rw
    networks:
      - network
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
networks:
  network:
